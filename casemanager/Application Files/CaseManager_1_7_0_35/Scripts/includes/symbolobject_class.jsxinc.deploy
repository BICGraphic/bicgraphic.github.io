//*********************************************************************************
// Creado por ALBERT ISUAR SOLE para el Departamento Gráfico de Bic Graphic Europe
// Fecha de última actualización: 11 de febrero de 2019
//*********************************************************************************

"use strict";

/**
 * Clase con la referencia a los objetos de tipo SymbolItem
 * @param {IllustratorDocument} illDoc El documento Illustrator
 */
function SymbolObject(illDoc) {
    this.illDoc = illDoc;
    // Colección de objetos SymbolItem creados a partir de símbolos del documento
    this.symbolItemObjects = [];
    // Objeto Layer que contiene una capa temporal
    this.temporalLayer = null;
}


/**
 * Crea objetos SymbolItem a partir de los símbolos que hay en el documento
 * @param {object} printingTechniques Objeto con la lista de técnicas de impresión
 */
SymbolObject.prototype.createSymbolItemObjects = function (printingTechniques) {
    var i, j;
    
    // Creamos la capa temporal
    this.CreateTemporalLayer();

    // Creamos nuevos objetos SymbolItem en el documento solo de las técnicas de impresión facilitadas
    for (i = 0; i < this.illDoc.docRef.symbols.length; i++) {
        for (j in printingTechniques) {
            if (this.illDoc.docRef.symbols[i].name.substr(0, printingTechniques[j].length) == printingTechniques[j])
                this.addSymbolItemObject(this.illDoc.docRef.symbols[i], printingTechniques[j]);
        }
    }
};


/**
 * Crea un objeto SymbolItem a partir del símbolo que coincide con la técnica, componente y posición
 * @param {string} printingTechnique La técnica de impresión
 * @param {string} printedComponent  El componente del producto donde se imprime
 * @param {string} printPosition     La posición dentro del componente del producto
 */
SymbolObject.prototype.createDigitalSymbolItemsObjects = function (printingTechnique, printedComponent, printPosition) {
    // Creamos la capa temporal
    this.CreateTemporalLayer();
    
    // Generamos el nombre completo del símbolo
    var symbolName = printingTechnique + "#" + printedComponent + "#" + printPosition;
    
    //
    for (k = 0; k < this.illDoc.docRef.symbols.length; k++) {
        //if (this.illDoc.docRef.symbols[k].name.substr(0, symbolName.length) == symbolName) {
        if (this.illDoc.docRef.symbols[k].name.match('^' + symbolName + '(?:#.*)?$')) {
            this.addSymbolItemObject(this.illDoc.docRef.symbols[k], printingTechnique);
        }
    }
};


/**
 * Crea un objeto SymbolItem en un documento, le aplica unas propiedades y lo añade a una colección
 * @param {object} symbol            El objeto SymbolItem de Illustrator
 * @param {string} printingTechnique La técnica de impresión
 */
SymbolObject.prototype.addSymbolItemObject = function (symbol, printingTechnique) {
    // Objeto SymbolItem de Illustrator que contiene un item a partir de un símbolo
    var newSymbolItem;
    
    // Añade un objeto SimbolItem a partir de un símbolo y le aplicamos el nombre y la técnica de impresión
    newSymbolItem = this.temporalLayer.symbolItems.add(symbol);
    newSymbolItem.name = symbol.name;
    newSymbolItem.technique = printingTechnique;
    
    // Añadimos el objeto creado a la colección
    this.symbolItemObjects.push(newSymbolItem);
};


/**
 * Añade un objeto SymbolItem a una colección con unas propiedades
 * @param {object} symbol            El objeto SymbolItem de Illustrator
 * @param {string} printingTechnique La técnica de impresión
 */
SymbolObject.prototype.addSymbolCollection = function (symbol, printingTechnique) {
    var newSymbolItem;
    
    newSymbolItem = symbol;
    newSymbolItem.name = symbol.name;
    newSymbolItem.technique = printingTechnique;
    
    this.symbolItemObjects.push(newSymbolItem);
};


/**
 * Crea una capa temporal en un documento Illustrator
 */
SymbolObject.prototype.CreateTemporalLayer = function () {
    // Nombre de la capa temporal
    var temporalLayerName = "tempLayer";
    
    // Creamos la capa temporal con el nombre
    this.temporalLayer = this.illDoc.docRef.layers.add();
    this.temporalLayer.name = temporalLayerName;
};



/**
 * Borra la capa temporal creada en un documento
 */
SymbolObject.prototype.deleteTemporalLayer = function () {
    if (this.temporalLayer != null) this.temporalLayer.remove();
    this.temporalLayer = null;
};
